/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Mathias' at '29.01.16 18:29' with Gradle 2.9
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.9/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Shadow is a Gradle plugin for combining dependency classes and resources
    // with a project�s into a single output Jar. The combined Jar is often
    // referred to a fat-jar or uber-jar. Shadow utilizes JarInputStream and
    // JarOutputStream to efficiently process dependent libraries into the
    // output jar without incurring the I/O overhead of expanding the jars to
    // disk.
    // http://imperceptiblethoughts.com/shadow/
    id "com.github.johnrengelman.shadow" version "1.2.3"

    // The gradle-launch4j plugin uses launch4j to create windows .exe files
    // for java applications.
    // https://github.com/TheBoegl/gradle-launch4j
    id 'edu.sc.seis.launch4j' version '1.6.2'

    //id "net.vivin.gradle-semantic-build-versioning" version "2.0.2"
    //id 'net.nemerosa.versioning' version '2.0.0'
    
    // https://github.com/researchgate/gradle-release
    // Dieses Plugin setzt voraus, dass Git im Pfad eingetragen ist!
    id 'net.researchgate.release' version '2.4.0'

    // Gradle release & version management plugin.
    // http://axion-release-plugin.readthedocs.io/en/latest/
    //id "pl.allegro.tech.build.axion-release" version "1.4.0"
    
    // Provides a class (or multiple) containing constants (public static final)
    // defined in the buildscript and available in the project. It can contain
    // simple infos like application name or version but also input from other
    // plugins like subversion commit number or git commit hash.
    // Die zugehörige Task lautet "generateBuildConfig"
    // https://github.com/mfuerstenau/gradle-buildconfig-plugin
    id 'de.fuerstenau.buildconfig' version '1.1.7'
    
    // Gradle plugin for generating a changelog based on a Git commit history.
    id 'com.selesse.git.changelog' version '0.2.1'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
//    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // Abh�ngigkeiten zur Compile-Zeit:
    compile 'log4j:log4j:1.2.17'
    compile 'commons-lang:commons-lang:2.2'
    compile 'commons-io:commons-io:2.4'
    compile 'commons-codec:commons-codec:1.10'
    compile 'commons-net:commons-net:3.4'
    compile 'org.apache.commons:commons-vfs2:2.0'
    compile 'com.jgoodies:jgoodies-forms:1.9.0'
    compile 'org.jdatepicker:jdatepicker:1.3.4'

//    compile fileTree(dir: 'libs', include: ['*.jar'])
//    compile 'org.apache.poi:poi:3.13'
//    compile 'org.apache.poi:poi-ooxml:3.13'


    runtime 'com.jcraft:jsch:0.1.53'
    


    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
// ############################################################################
def copyRight = '(C) 2016 TeamBaltic'

// ############################################################################
// 
// id 'de.fuerstenau.buildconfig' version '1.1.7'

buildConfig {
    appName = project.name       // sets value of NAME field
    version = project.version    // sets value of VERSION field,
                                 // 'unspecified' if project.version is not set

    clsName = 'BuildConfig'      // sets the name of the BuildConfig class
    packageName = "teambaltic"   // sets the package of the BuildConfig class,
                                 // 'de.fuerstenau.buildconfig' if project.group is not set
    charset = 'UTF-8'            // sets charset of the generated class,
                                 // 'UTF-8' if not set otherwise
    buildConfigField 'String', 'COPYRIGHT', copyRight
}

// ############################################################################
jar {
    manifest {
        attributes 'Main-Class': 'teambaltic.adhelper.gui.ADH_Application'
    }
}

launch4j {
    println "Name= $project.name"
    println "Version = $project.version"
    outfile = "${project.name}-${project.version}.exe"
    mainClassName = 'teambaltic.adhelper.gui.ADH_Application'
    headerType = "gui"
    copyConfigurable = project.tasks.shadowJar.outputs.files
    jar = "lib/${project.tasks.shadowJar.archiveName}"
    copyright = copyRight
}
// ############################################################################
def docu        = file('misc/Dokumentation/Dokumentation.txt')
def exe         = file("build/launch4j/${launch4j.outfile}")
def releaseNotes= file('RELEASENOTES.txt')
def changeLog	= file('build/resources/main/CHANGELOG.md')

artifacts {
    archives docu
    archives exe
    archives releaseNotes
    archives changeLog
}

uploadArchives {
    repositories {
        flatDir {
            name "VersionRepo/"
            dirs "Versionen/${project.name}-${project.version}"
        }
    }
}
// ############################################################################
//'net.researchgate.release'
// Git MUSS im Pfad verfügbar sein!
// Am besten aus Kommando-Shell aufrufen mit 
//      gradlew :release -Prelease.useAutomaticVersion=true

release {
    failOnUnversionedFiles = false
//    failOnCommitNeeded = false
    buildTasks = ['launch4j']
    tagTemplate = '$name-$version'
    preTagCommitMessage = 'Neues Release: '
    newVersionCommitMessage = 'Vorbereitung für nächste Version: '
}
afterReleaseBuild.dependsOn uploadArchives
// ############################################################################


